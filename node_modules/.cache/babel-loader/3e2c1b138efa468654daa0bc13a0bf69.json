{"ast":null,"code":"var _jsxFileName = \"/Users/gordi/Desktop/Ironhack/barcenas/client/src/components/login/login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport \"../login/login.css\";\nimport TextField from '@mui/material/TextField';\nimport authService from \"../../services/auth.services\";\nimport { AuthContext } from './../../context/auth.context';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [loginForm, setLoginForm] = useState({\n    restaurant: \"\",\n    password: \"\"\n  }); //  const { setShowMessage, setMessageInfo } = useContext(MessageContext)\n\n  const {\n    storeToken,\n    authenticateUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    restaurant,\n    password\n  } = loginForm;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginForm({ ...loginForm,\n      [name]: value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    authService.login(loginForm).then(_ref => {\n      let {\n        data\n      } = _ref;\n      //console.log(\"JWT token\", data.authToken)\n      storeToken(data.authToken);\n      authenticateUser(); // setShowMessage(true)\n      // setMessageInfo({ title: 'Éxito', desc: 'Sesión iniciada correctamente' })\n\n      navigate('/');\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-required-input\",\n          label: \"Restaurant\",\n          name: \"restaurant\",\n          type: \"text\",\n          onChange: handleInputChange,\n          value: restaurant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-password-input\",\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"XYLY3jatVCYaxZo6KjER9N3KKkE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/barcenas/client/src/components/login/login.jsx"],"names":["useState","useContext","Form","Button","TextField","authService","AuthContext","useNavigate","LoginPage","loginForm","setLoginForm","restaurant","password","storeToken","authenticateUser","navigate","handleInputChange","e","name","value","target","handleSubmit","preventDefault","login","then","data","authToken","catch","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAGA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACzCW,IAAAA,UAAU,EAAE,EAD6B;AAE1CC,IAAAA,QAAQ,EAAE;AAFgC,GAAD,CAA1C,CAFqB,CASpB;;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAmCb,UAAU,CAACK,WAAD,CAAnD;AAGI,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAGJ,QAAM;AAACI,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAyBH,SAA/B;;AACA,QAAMO,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAV,IAAAA,YAAY,CAAC,EACT,GAAGD,SADM;AAET,OAACS,IAAD,GAAQC;AAFC,KAAD,CAAZ;AAIH,GAPD;;AAUI,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AAEzBA,IAAAA,CAAC,CAACK,cAAF;AAEAjB,IAAAA,WAAW,CACNkB,KADL,CACWd,SADX,EAEKe,IAFL,CAEU,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAChB;AACAZ,MAAAA,UAAU,CAACY,IAAI,CAACC,SAAN,CAAV;AACAZ,MAAAA,gBAAgB,GAHA,CAIhB;AACA;;AACAC,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,KATL,EAUKY,KAVL,CAUWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWH;;AAED,sBACA;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,2BAEJ,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,gBAAvC;AAAA,+BACG,QAAC,SAAD;AACG,UAAA,EAAE,EAAC,yBADN;AAEK,UAAA,KAAK,EAAC,YAFX;AAGK,UAAA,IAAI,EAAC,YAHV;AAIK,UAAA,IAAI,EAAC,MAJV;AAKK,UAAA,QAAQ,EAAEL,iBALf;AAMK,UAAA,KAAK,EAAEL;AANZ;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA,+BACO,QAAC,SAAD;AACC,UAAA,EAAE,EAAC,yBADJ;AAEC,UAAA,KAAK,EAAC,UAFP;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,IAAI,EAAC,UAJN;AAKC,UAAA,QAAQ,EAAEK,iBALX;AAMC,UAAA,KAAK,EAAEJ;AANR;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,cAZF,eAyBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFI;AAAA;AAAA;AAAA;AAAA,UADA;AAkCH,CA9ED;;GAAMJ,S;UAamBD,W;;;KAbnBC,S;AAgFN,eAAeA,SAAf","sourcesContent":["import { useState, useContext } from \"react\"\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport \"../login/login.css\"\nimport TextField from '@mui/material/TextField';\nimport authService from \"../../services/auth.services\";\nimport { AuthContext } from './../../context/auth.context'\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst LoginPage = () => {\n\n   const [loginForm, setLoginForm] = useState({\n     restaurant: \"\",    \n    password: \"\"\n       \n    })\n\n\n    //  const { setShowMessage, setMessageInfo } = useContext(MessageContext)\n    const { storeToken, authenticateUser } = useContext(AuthContext)\n\n\n        const navigate = useNavigate()\n  \n\n    const {restaurant, password} = loginForm\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        \n        setLoginForm({\n            ...loginForm,\n            [name]: value\n        })\n    }\n\n\n        function handleSubmit(e) {\n \n        e.preventDefault()\n\n        authService\n            .login(loginForm)\n            .then(({ data }) => {\n                //console.log(\"JWT token\", data.authToken)\n                storeToken(data.authToken)\n                authenticateUser()\n                // setShowMessage(true)\n                // setMessageInfo({ title: 'Éxito', desc: 'Sesión iniciada correctamente' })\n                navigate('/')\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n    <div id=\"login-form\">\n     \n<Form onSubmit={handleSubmit}>\n  <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n     <TextField\n        id=\"outlined-required-input\"\n          label=\"Restaurant\"\n          name=\"restaurant\"\n          type=\"text\"\n          onChange={handleInputChange}\n          value={restaurant}\n        />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n         <TextField\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          name=\"password\"\n          type=\"password\"\n          onChange={handleInputChange}\n          value={password}\n        />\n  </Form.Group>\n  {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group> */}\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n</div>  \n    )\n}\n\nexport default LoginPage;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}