{"ast":null,"code":"import axios from \"axios\";\n\nclass RestaurantService {\n  constructor() {\n    this.getRestaurant = user => {\n      return this.api.get(`/restaurant/${user._id}`);\n    };\n\n    this.saveRestaurant = restaurant => {\n      return this.api.post('/create', restaurant);\n    };\n\n    this.createTable = table => {\n      console.log;\n      return this.api.post(\"/create-table\", table);\n    };\n\n    this.api = axios.create({\n      baseURL: 'http://localhost:5005/api'\n    });\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  verify(token) {\n    return this.api.get('/verify', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nconst restaurantService = new RestaurantService();\nexport default restaurantService;","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/barcenas/client/src/services/restaurant.services.js"],"names":["axios","RestaurantService","constructor","getRestaurant","user","api","get","_id","saveRestaurant","restaurant","post","createTable","table","console","log","create","baseURL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","verify","token","restaurantService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,CAAwB;AAEpBC,EAAAA,WAAW,GAAG;AAAA,SAoBdC,aApBc,GAoBGC,IAAD,IAAU;AAEtB,aAAO,KAAKC,GAAL,CAASC,GAAT,CAAc,eAAcF,IAAI,CAACG,GAAI,EAArC,CAAP;AACH,KAvBa;;AAAA,SAyBdC,cAzBc,GAyBGC,UAAU,IAAI;AAC3B,aAAO,KAAKJ,GAAL,CAASK,IAAT,CAAc,SAAd,EAAyBD,UAAzB,CAAP;AACH,KA3Ba;;AAAA,SA6BdE,WA7Bc,GA6BCC,KAAD,IAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR;AACA,aAAO,KAAKT,GAAL,CAASK,IAAT,CAAc,eAAd,EAA+BE,KAA/B,CAAP;AACH,KAhCa;;AACV,SAAKP,GAAL,GAAWL,KAAK,CAACe,MAAN,CAAa;AAEpBC,MAAAA,OAAO,EAAE;AAFW,KAAb,CAAX;AAMI,SAAKX,GAAL,CAASY,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAE9C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AACbD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACH;;AAED,aAAOD,MAAP;AAEC,KAVD;AAWP;;AAgBDM,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,WAAO,KAAKtB,GAAL,CAASC,GAAT,CAAa,SAAb,EAAwB;AAAEkB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASE,KAAM;AAAjC;AAAX,KAAxB,CAAP;AACH;;AAtCmB;;AA0CxB,MAAMC,iBAAiB,GAAG,IAAI3B,iBAAJ,EAA1B;AAEA,eAAe2B,iBAAf","sourcesContent":["import axios from \"axios\";\n\nclass RestaurantService {\n\n    constructor() {\n        this.api = axios.create({\n\n            baseURL: 'http://localhost:5005/api'\n\n        })\n\n            this.api.interceptors.request.use((config) => {\n\n            const storedToken = localStorage.getItem(\"authToken\");\n\n            if (storedToken) {\n                config.headers = { Authorization: `Bearer ${storedToken}` }\n            }\n\n            return config\n\n            })\n    }\n\n    getRestaurant = (user) => {\n\n        return this.api.get(`/restaurant/${user._id}`)\n    }\n    \n    saveRestaurant = restaurant => {\n        return this.api.post('/create', restaurant)\n    }\n\n    createTable = (table) => {\n        console.log\n        return this.api.post(\"/create-table\", table);\n    };\n\n    verify(token) {\n        return this.api.get('/verify', { headers: { Authorization: `Bearer ${token}` } })\n    }\n \n}\n\nconst restaurantService = new RestaurantService();\n\nexport default restaurantService;\n"]},"metadata":{},"sourceType":"module"}