{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\ironhack\\\\9week\\\\barcenasClient\\\\src\\\\pages\\\\CustomerPages\\\\registerCustomer\\\\RegisterCustomer.jsx\",\n    _s = $RefreshSig$();\n\nimport { FormControl, Input, InputLabel, FormHelperText, Container, Grid, TextField, Button } from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { Form } from 'react-bootstrap';\nimport restaurantService from '../../../services/restaurant.services';\nimport authService from '../../../services/auth.services';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterCustomer = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    tableId\n  } = useParams();\n  const [customerData, setCustomerData] = useState({\n    customer: \"\",\n    password: \"\"\n  });\n  const {\n    customer,\n    password\n  } = customerData;\n\n  const handleInputChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setCustomerData({ ...customerData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    authService.tableLogin(customerData, tableId).then(() => {\n      navigate('/');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Indica un username y un password para registrarte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textField\",\n          required: true,\n          label: \"Customer\",\n          name: \"customer\",\n          type: \"text\",\n          value: customer,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"textField\",\n          required: true,\n          label: \"password\",\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"medium\",\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterCustomer, \"r2FWrHrVUstoHiPA2NcqwQdvjN4=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = RegisterCustomer;\nexport default RegisterCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterCustomer\");","map":{"version":3,"sources":["C:/Users/gonza/Desktop/ironhack/9week/barcenasClient/src/pages/CustomerPages/registerCustomer/RegisterCustomer.jsx"],"names":["FormControl","Input","InputLabel","FormHelperText","Container","Grid","TextField","Button","useEffect","useState","Form","restaurantService","authService","useNavigate","useParams","RegisterCustomer","navigate","tableId","customerData","setCustomerData","customer","password","handleInputChange","e","value","name","target","handleSubmit","preventDefault","tableLogin","then"],"mappings":";;;AACA,SAASA,WAAT,EAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,cAAzC,EAAyDC,SAAzD,EAAoEC,IAApE,EAA0EC,SAA1E,EAAqFC,MAArF,QAAmG,eAAnG;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;;;;AAKA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAYH,SAAS,EAA3B;AAEA,QAAM,CAACI,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAC5C;AACIW,IAAAA,QAAQ,EAAE,EADd;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAD4C,CAAhD;AASA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,YAA/B;;AAGA,QAAMI,iBAAiB,GAAGC,CAAC,IAAI;AAE3B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,CAAC,CAACG,MAA1B;AAEAP,IAAAA,eAAe,CAAC,EACZ,GAAGD,YADS;AAEZ,OAACO,IAAD,GAAQD;AAFI,KAAD,CAAf;AAKH,GATD;;AAWA,QAAMG,YAAY,GAAGJ,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACK,cAAF;AAEAhB,IAAAA,WAAW,CACNiB,UADL,CACgBX,YADhB,EAC8BD,OAD9B,EAEKa,IAFL,CAEU,MAAM;AACTd,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACF,KAJL;AAMH,GATD;;AAWA,sBAGI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEW,YAAhB;AAAA,gCAEI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,WAArB;AACI,UAAA,QAAQ,MADZ;AAGI,UAAA,KAAK,EAAC,UAHV;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,IAAI,EAAC,MALT;AAMI,UAAA,KAAK,EAAEP,QANX;AAOI,UAAA,QAAQ,EAAEE;AAPd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAYI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,WAArB;AACI,UAAA,QAAQ,MADZ;AAGI,UAAA,KAAK,EAAC,UAHV;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,IAAI,EAAC,UALT;AAMI,UAAA,KAAK,EAAED,QANX;AAOI,UAAA,QAAQ,EAAEC;AAPd;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAqBI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,UAAhB;AAA2B,UAAA,IAAI,EAAC,QAAhC;AAAyC,UAAA,IAAI,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBAHJ;AAyCH,CAhFD;;GAAMP,gB;UAEeF,W,EACCC,S;;;KAHhBC,gB;AAiFN,eAAeA,gBAAf","sourcesContent":["\r\nimport { FormControl, Input, InputLabel, FormHelperText, Container, Grid, TextField, Button } from '@mui/material'\r\nimport { useEffect, useState } from 'react'\r\nimport { Form } from 'react-bootstrap'\r\nimport restaurantService from '../../../services/restaurant.services'\r\nimport authService from '../../../services/auth.services'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nconst RegisterCustomer = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const {tableId} = useParams()\r\n\r\n    const [customerData, setCustomerData] = useState(\r\n        {\r\n            customer: \"\",\r\n            password: \"\"\r\n        }\r\n    )\r\n\r\n\r\n\r\n    const { customer, password } = customerData\r\n\r\n\r\n    const handleInputChange = e => {\r\n\r\n        const { value, name } = e.target\r\n\r\n        setCustomerData({\r\n            ...customerData,\r\n            [name]: value\r\n        })\r\n        \r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        authService\r\n            .tableLogin(customerData, tableId)\r\n            .then(() => {\r\n               navigate('/')\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n            <Grid container>\r\n\r\n                <h2>Indica un username y un password para registrarte</h2>\r\n\r\n                <Form onSubmit={handleSubmit} >\r\n\r\n                    <TextField className='textField'\r\n                        required\r\n\r\n                        label=\"Customer\"\r\n                        name=\"customer\"\r\n                        type=\"text\"\r\n                        value={customer}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                    <TextField className='textField'\r\n                        required\r\n\r\n                        label=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <Button variant=\"outlined\" size=\"medium\" type='submit' >\r\n                        Enviar\r\n                    </Button>\r\n                </Form>\r\n            </Grid>\r\n\r\n\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\nexport default RegisterCustomer\r\n"]},"metadata":{},"sourceType":"module"}