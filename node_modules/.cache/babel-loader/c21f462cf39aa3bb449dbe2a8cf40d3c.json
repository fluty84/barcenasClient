{"ast":null,"code":"import axios from \"axios\";\n\nclass RestaurantService {\n  constructor() {\n    this.getRestaurant = user => {\n      return this.api.get(`/restaurant/${user._id}`);\n    };\n\n    this.saveRestaurant = restaurant => {\n      return this.api.post(\"/create\", restaurant);\n    };\n\n    this.createTable = table => {\n      return this.api.post(\"/create-table\");\n    };\n\n    this.api = axios.create({\n      baseURL: \"http://localhost:5005/api\"\n    });\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  verify(token) {\n    return this.api.get(\"/verify\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nconst restaurantService = new RestaurantService();\nexport default restaurantService;","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/services/restaurant.services.js"],"names":["axios","RestaurantService","constructor","getRestaurant","user","api","get","_id","saveRestaurant","restaurant","post","createTable","table","create","baseURL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","verify","token","restaurantService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,GAAG;AAAA,SAgBdC,aAhBc,GAgBGC,IAAD,IAAU;AACxB,aAAO,KAAKC,GAAL,CAASC,GAAT,CAAc,eAAcF,IAAI,CAACG,GAAI,EAArC,CAAP;AACD,KAlBa;;AAAA,SAoBdC,cApBc,GAoBIC,UAAD,IAAgB;AAC/B,aAAO,KAAKJ,GAAL,CAASK,IAAT,CAAc,SAAd,EAAyBD,UAAzB,CAAP;AACD,KAtBa;;AAAA,SAwBdE,WAxBc,GAwBCC,KAAD,IAAW;AACvB,aAAO,KAAKP,GAAL,CAASK,IAAT,CAAc,eAAd,CAAP;AACD,KA1Ba;;AACZ,SAAKL,GAAL,GAAWL,KAAK,CAACa,MAAN,CAAa;AACtBC,MAAAA,OAAO,EAAE;AADa,KAAb,CAAX;AAIA,SAAKT,GAAL,CAASU,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AACfD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACD;;AAED,aAAOD,MAAP;AACD,KARD;AASD;;AAcDM,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,WAAO,KAAKpB,GAAL,CAASC,GAAT,CAAa,SAAb,EAAwB;AAC7BgB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASE,KAAM;AAAjC;AADoB,KAAxB,CAAP;AAGD;;AAjCqB;;AAoCxB,MAAMC,iBAAiB,GAAG,IAAIzB,iBAAJ,EAA1B;AAEA,eAAeyB,iBAAf","sourcesContent":["import axios from \"axios\";\n\nclass RestaurantService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: \"http://localhost:5005/api\",\n    });\n\n    this.api.interceptors.request.use((config) => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = { Authorization: `Bearer ${storedToken}` };\n      }\n\n      return config;\n    });\n  }\n\n  getRestaurant = (user) => {\n    return this.api.get(`/restaurant/${user._id}`);\n  };\n\n  saveRestaurant = (restaurant) => {\n    return this.api.post(\"/create\", restaurant);\n  };\n\n  createTable = (table) => {\n    return this.api.post(\"/create-table\");\n  };\n\n  verify(token) {\n    return this.api.get(\"/verify\", {\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n}\n\nconst restaurantService = new RestaurantService();\n\nexport default restaurantService;\n"]},"metadata":{},"sourceType":"module"}