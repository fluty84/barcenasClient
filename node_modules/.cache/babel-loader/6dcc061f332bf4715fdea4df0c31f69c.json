{"ast":null,"code":"import axios from 'axios';\n\nclass UploadService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api/upload`\n    });\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  uploadImage(imageForm) {\n    return this.api.post('/image', imageForm);\n  }\n\n}\n\nconst uploadService = new UploadService();\nexport default uploadService;","map":{"version":3,"sources":["C:/Users/gonza/Desktop/ironhack/9week/barcenasClient/src/services/upload.service.js"],"names":["axios","UploadService","constructor","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","uploadImage","imageForm","post","uploadService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,CAAoB;AAEhBC,EAAAA,WAAW,GAAG;AAEV,SAAKC,GAAL,GAAWH,KAAK,CAACI,MAAN,CAAa;AAAEC,MAAAA,OAAO,EAAG,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB;AAA5C,KAAb,CAAX;AAEA,SAAKL,GAAL,CAASM,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAE1C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AACbD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACH;;AAED,aAAOD,MAAP;AACH,KATD;AAUH;;AAEDM,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,WAAO,KAAKhB,GAAL,CAASiB,IAAT,CAAc,QAAd,EAAwBD,SAAxB,CAAP;AACH;;AApBe;;AAuBpB,MAAME,aAAa,GAAG,IAAIpB,aAAJ,EAAtB;AAEA,eAAeoB,aAAf","sourcesContent":["import axios from 'axios'\r\n\r\nclass UploadService {\r\n\r\n    constructor() {\r\n\r\n        this.api = axios.create({ baseURL: `${process.env.REACT_APP_API_URL}/api/upload` })\r\n\r\n        this.api.interceptors.request.use((config) => {\r\n\r\n            const storedToken = localStorage.getItem(\"authToken\");\r\n\r\n            if (storedToken) {\r\n                config.headers = { Authorization: `Bearer ${storedToken}` }\r\n            }\r\n\r\n            return config\r\n        })\r\n    }\r\n\r\n    uploadImage(imageForm) {\r\n        return this.api.post('/image', imageForm)\r\n    }\r\n}\r\n\r\nconst uploadService = new UploadService()\r\n\r\nexport default uploadService"]},"metadata":{},"sourceType":"module"}