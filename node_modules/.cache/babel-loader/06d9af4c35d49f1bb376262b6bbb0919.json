{"ast":null,"code":"import axios from \"axios\";\n\nclass RestaurantService {\n  constructor() {\n    this.getRestaurant = user => {\n      return this.api.get(`/restaurant/${user._id}`);\n    };\n\n    this.saveRestaurant = restaurant => {\n      return this.api.post(\"/create\", restaurant);\n    };\n\n    this.createTable = () => {\n      return this.api.post(\"/create-table\");\n    };\n\n    this.acceptOrder = id => {\n      return this.api.post(\"/accept-order\", id);\n    };\n\n    this.cancelOrder = id => {\n      return this.api.post(\"/delete-order\", id);\n    };\n\n    this.checkTable = tableId => {\n      return this.api.get(`/table/${tableId}`);\n    };\n\n    this.editFinalOrder = order => {\n      console.log(order);\n      return this.api.get('/update-total', order);\n    };\n\n    this.api = axios.create({\n      baseURL: \"http://localhost:5005/api\"\n    });\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  verify(token) {\n    return this.api.get(\"/verify\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nconst restaurantService = new RestaurantService();\nexport default restaurantService;","map":{"version":3,"sources":["C:/Users/gonza/Desktop/ironhack/9week/barcenasClient/src/services/restaurant.services.js"],"names":["axios","RestaurantService","constructor","getRestaurant","user","api","get","_id","saveRestaurant","restaurant","post","createTable","acceptOrder","id","cancelOrder","checkTable","tableId","editFinalOrder","order","console","log","create","baseURL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","verify","token","restaurantService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,GAAG;AAAA,SAgBdC,aAhBc,GAgBGC,IAAD,IAAU;AACxB,aAAO,KAAKC,GAAL,CAASC,GAAT,CAAc,eAAcF,IAAI,CAACG,GAAI,EAArC,CAAP;AACD,KAlBa;;AAAA,SAoBdC,cApBc,GAoBIC,UAAD,IAAgB;AAC/B,aAAO,KAAKJ,GAAL,CAASK,IAAT,CAAc,SAAd,EAAyBD,UAAzB,CAAP;AACD,KAtBa;;AAAA,SAwBdE,WAxBc,GAwBA,MAAM;AAClB,aAAO,KAAKN,GAAL,CAASK,IAAT,CAAc,eAAd,CAAP;AACD,KA1Ba;;AAAA,SA4BdE,WA5Bc,GA4BCC,EAAD,IAAQ;AACpB,aAAO,KAAKR,GAAL,CAASK,IAAT,CAAc,eAAd,EAA+BG,EAA/B,CAAP;AACD,KA9Ba;;AAAA,SAgCdC,WAhCc,GAgCCD,EAAD,IAAQ;AACpB,aAAO,KAAKR,GAAL,CAASK,IAAT,CAAc,eAAd,EAA+BG,EAA/B,CAAP;AACD,KAlCa;;AAAA,SAoCdE,UApCc,GAoCAC,OAAD,IAAa;AACxB,aAAO,KAAKX,GAAL,CAASC,GAAT,CAAc,UAASU,OAAQ,EAA/B,CAAP;AACD,KAtCa;;AAAA,SAwCdC,cAxCc,GAwCIC,KAAD,IAAW;AAE1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAKb,GAAL,CAASC,GAAT,CAAa,eAAb,EAA8BY,KAA9B,CAAP;AAED,KA7Ca;;AACZ,SAAKb,GAAL,GAAWL,KAAK,CAACqB,MAAN,CAAa;AACtBC,MAAAA,OAAO,EAAE;AADa,KAAb,CAAX;AAIA,SAAKjB,GAAL,CAASkB,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AACfD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACD;;AAED,aAAOD,MAAP;AACD,KARD;AASD;;AAiCDM,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,WAAO,KAAK5B,GAAL,CAASC,GAAT,CAAa,SAAb,EAAwB;AAC7BwB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASE,KAAM;AAAjC;AADoB,KAAxB,CAAP;AAGD;;AApDqB;;AAuDxB,MAAMC,iBAAiB,GAAG,IAAIjC,iBAAJ,EAA1B;AAEA,eAAeiC,iBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nclass RestaurantService {\r\n  constructor() {\r\n    this.api = axios.create({\r\n      baseURL: \"http://localhost:5005/api\",\r\n    });\r\n\r\n    this.api.interceptors.request.use((config) => {\r\n      const storedToken = localStorage.getItem(\"authToken\");\r\n\r\n      if (storedToken) {\r\n        config.headers = { Authorization: `Bearer ${storedToken}` };\r\n      }\r\n\r\n      return config;\r\n    });\r\n  }\r\n\r\n  getRestaurant = (user) => {\r\n    return this.api.get(`/restaurant/${user._id}`);\r\n  };\r\n\r\n  saveRestaurant = (restaurant) => {\r\n    return this.api.post(\"/create\", restaurant);\r\n  };\r\n\r\n  createTable = () => {\r\n    return this.api.post(\"/create-table\");\r\n  };\r\n\r\n  acceptOrder = (id) => {\r\n    return this.api.post(\"/accept-order\", id);\r\n  };\r\n\r\n  cancelOrder = (id) => {\r\n    return this.api.post(\"/delete-order\", id);\r\n  };\r\n\r\n  checkTable = (tableId) => {\r\n    return this.api.get(`/table/${tableId}`);\r\n  };\r\n\r\n  editFinalOrder = (order) => {\r\n\r\n    console.log(order)\r\n    return this.api.get('/update-total', order)\r\n    \r\n  }\r\n\r\n  verify(token) {\r\n    return this.api.get(\"/verify\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  }\r\n}\r\n\r\nconst restaurantService = new RestaurantService();\r\n\r\nexport default restaurantService;\r\n"]},"metadata":{},"sourceType":"module"}