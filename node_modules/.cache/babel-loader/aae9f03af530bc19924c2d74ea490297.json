{"ast":null,"code":"import axios from \"axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/auth.context\";\n\nclass ProductService {\n  constructor() {\n    var _s = $RefreshSig$();\n\n    this.saveProduct = product => {\n      return this.api.post(\"/create-product\", product);\n    };\n\n    this.getAll = _s(() => {\n      _s();\n\n      const {\n        user\n      } = useContext(AuthContext);\n      return this.api.post(\"/restaurant/:id\", user);\n    }, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n    this.createOrder = (order, tableId) => {\n      return this.api.post(\"/send-order\", {\n        order,\n        tableId\n      });\n    };\n\n    this.displayOrder = id => {\n      console.log(\"this display is: \" + id);\n      return this.api.get(`/${id}/display-order`);\n    };\n\n    this.api = axios.create({\n      baseURL: \"http://localhost:5005/api\"\n    });\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  verify(token) {\n    return this.api.get(\"/verify\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nconst productService = new ProductService();\nexport default productService;","map":{"version":3,"sources":["C:/Users/gonza/Desktop/ironhack/9week/barcenasClient/src/services/product.services.js"],"names":["axios","useContext","AuthContext","ProductService","constructor","saveProduct","product","api","post","getAll","user","createOrder","order","tableId","displayOrder","id","console","log","get","create","baseURL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","verify","token","productService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,cAAN,CAAqB;AACnBC,EAAAA,WAAW,GAAG;AAAA;;AAAA,SAgBdC,WAhBc,GAgBCC,OAAD,IAAa;AACzB,aAAO,KAAKC,GAAL,CAASC,IAAT,CAAc,iBAAd,EAAiCF,OAAjC,CAAP;AACD,KAlBa;;AAAA,SAoBdG,MApBc,MAoBL,MAAM;AAAA;;AACb,YAAM;AAAEC,QAAAA;AAAF,UAAWT,UAAU,CAACC,WAAD,CAA3B;AAEA,aAAO,KAAKK,GAAL,CAASC,IAAT,CAAc,iBAAd,EAAiCE,IAAjC,CAAP;AACD,KAxBa;;AAAA,SA0BdC,WA1Bc,GA0BA,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAChC,aAAO,KAAKN,GAAL,CAASC,IAAT,CAAc,aAAd,EAA6B;AAAEI,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAA7B,CAAP;AACD,KA5Ba;;AAAA,SA8BdC,YA9Bc,GA8BEC,EAAD,IAAQ;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,EAAlC;AACA,aAAO,KAAKR,GAAL,CAASW,GAAT,CAAc,IAAGH,EAAG,gBAApB,CAAP;AACD,KAjCa;;AACZ,SAAKR,GAAL,GAAWP,KAAK,CAACmB,MAAN,CAAa;AACtBC,MAAAA,OAAO,EAAE;AADa,KAAb,CAAX;AAIA,SAAKb,GAAL,CAASc,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AACfD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACD;;AAED,aAAOD,MAAP;AACD,KARD;AASD;;AAqBDM,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACZ,WAAO,KAAKxB,GAAL,CAASW,GAAT,CAAa,SAAb,EAAwB;AAC7BU,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASE,KAAM;AAAjC;AADoB,KAAxB,CAAP;AAGD;;AAxCkB;;AA2CrB,MAAMC,cAAc,GAAG,IAAI7B,cAAJ,EAAvB;AAEA,eAAe6B,cAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../context/auth.context\";\r\n\r\nclass ProductService {\r\n  constructor() {\r\n    this.api = axios.create({\r\n      baseURL: \"http://localhost:5005/api\",\r\n    });\r\n\r\n    this.api.interceptors.request.use((config) => {\r\n      const storedToken = localStorage.getItem(\"authToken\");\r\n\r\n      if (storedToken) {\r\n        config.headers = { Authorization: `Bearer ${storedToken}` };\r\n      }\r\n\r\n      return config;\r\n    });\r\n  }\r\n\r\n  saveProduct = (product) => {\r\n    return this.api.post(\"/create-product\", product);\r\n  };\r\n\r\n  getAll = () => {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    return this.api.post(\"/restaurant/:id\", user);\r\n  };\r\n\r\n  createOrder = (order, tableId) => {\r\n    return this.api.post(\"/send-order\", { order, tableId });\r\n  };\r\n\r\n  displayOrder = (id) => {\r\n    console.log(\"this display is: \" + id);\r\n    return this.api.get(`/${id}/display-order`);\r\n  };\r\n\r\n  verify(token) {\r\n    return this.api.get(\"/verify\", {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n  }\r\n}\r\n\r\nconst productService = new ProductService();\r\n\r\nexport default productService;\r\n"]},"metadata":{},"sourceType":"module"}