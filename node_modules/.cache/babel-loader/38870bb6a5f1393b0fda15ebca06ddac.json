{"ast":null,"code":"var _jsxFileName = \"/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/pages/CustomerPages/Basket.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../context/auth.context\";\nimport { useParams } from \"react-router-dom\";\nimport CreateTable from \"../../components/table/CreateTable\";\nimport productService from \"../../services/product.services\";\nimport restaurantService from \"../../services/restaurant.services\";\nimport { Form, Table } from \"react-bootstrap\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n/**\n * Basket\n * @arg props: Object { _id: number, tableId: number }\n */\n\nfunction Basket(props) {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n  let response = \"\";\n  let currentOrder = \"\";\n  let {\n    tableId,\n    _id\n  } = useParams();\n\n  if (_id) {} else {\n    _id = props._id;\n    tableId = props.tableId;\n  }\n\n  const joinRoom = () => {\n    socket.emit(\"join_room\", orders);\n  };\n\n  socket.on(\"join_room\", function (msg) {\n    if (msg === \"ACEPTADO\") {\n      setIsOrder(msg);\n      setIsOrder(true);\n      setIsAcceptedBtn(false);\n    }\n  });\n  const [orders, setOrder] = useState([]);\n  const [totalProducts, setTotalProducts] = useState({});\n  const [ticket, setTicket] = useState([]);\n  const [changes, setChanges] = useState(false);\n  const [isOrder, setIsOrder] = useState(false);\n  const [isSubmittedOrder, setIsSubmittedOrder] = useState(false);\n  const [isReceivedMsg, setIsReceivedMsg] = useState(false);\n  const [isAcceptedBtn, setIsAcceptedBtn] = useState(false);\n  const [qtySumOK, setQtySumOK] = useState(false);\n  const [qtyProductsArr, setQtyProductsArr] = useState([]);\n  const didMount = useRef(false);\n  useEffect(() => {\n    productService.displayOrder(tableId).then(response => {\n      setOrder(response.data.result.currentOrder);\n    });\n  }, []);\n  useEffect(() => {\n    if (didMount.current) {\n      setOrder([...orders, props.orderForm]);\n      console.log(props.orderForm, \"this is an order form\");\n      console.log(...orders, \"-------------------------!!!!!!!!!!!!!!!!!!!!!!!\");\n    } else {\n      didMount.current = true;\n    }\n  }, [props.isOrderSent]);\n  const cuenta = {};\n  useEffect(() => {\n    if (didMount.current) {\n      productService.createOrder(...orders, tableId).then(() => console.log(\"producto creado con exito\")).catch(e => console.log(e));\n    } else {\n      didMount.current = true;\n    }\n  }, [isSubmittedOrder]);\n  useEffect(() => {\n    ///Renderizado general\n    filter(orders);\n    calculateTotal();\n    qtySum(cuenta);\n    console.log('qty--------------', qtyProductsArr);\n  }, [orders, changes]);\n  useEffect(() => {\n    setChanges(true);\n  }, [ticket]);\n  useEffect(() => {\n    qtySum();\n  }, [cuenta]);\n  let cuentaTotal = null;\n\n  function filter() {\n    // suma el total de productos\n    let newArr = [];\n    orders.forEach(product => {\n      newArr.push(Object.keys(product).flat());\n    });\n    const flatArr = newArr.flat();\n    const uniqueKeys = [...new Set(flatArr)];\n    const filteredArr = uniqueKeys.filter(x => {\n      return x != \"id\";\n    });\n    filteredArr.forEach(item => {\n      cuenta[item] = 0;\n    });\n    filteredArr.forEach(product => {\n      orders.forEach(ord => {\n        for (const property in ord) {\n          if (property == product) {\n            cuenta[product] += parseInt(ord[property]);\n          }\n        }\n      });\n    });\n    cuentaTotal = { ...cuenta\n    };\n    console.log(\"la cuenta es\", cuentaTotal);\n  }\n\n  function calculateTotal() {\n    //multiplica por el total\n    let menu = [];\n    restaurantService.getRestaurant({\n      _id\n    }).then(rest => {\n      menu = rest.data.menu;\n    }).then(() => {\n      let keyArr = Object.keys(cuentaTotal);\n      keyArr.forEach(key => {\n        menu.forEach(item => {\n          if (item.name === key) {\n            cuentaTotal[key] *= item.price;\n          }\n        });\n      });\n      setTicket(cuentaTotal); // const jsx = Object.entries(ticket).forEach(([key, value]) => {});\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsAcceptedBtn(true);\n    setIsSubmittedOrder(true);\n    joinRoom();\n  };\n\n  const qtySum = cuenta => {\n    if (cuenta) {\n      const productArr = [];\n      Object.values(cuenta).map(item => {\n        productArr.push(item);\n      });\n      setQtyProductsArr(productArr);\n      console.log(qtyProductsArr, \"--------------------------------->>>\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 1\n    }, this), changes && Object.entries(ticket).map((key, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [key[0], \" \", key[1], \" Euros. Unidades = \", qtyProductsArr[idx]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }, this)), orders.length !== 0 && /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: !isAcceptedBtn && !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Solicitar pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: isOrder ? null : \"spinner-border spinner-border-sm\" // class=\"spinner-border spinner-border-sm\"\n          ,\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: isOrder ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Orden Lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Esperando confirmaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Basket, \"dc9jsDio7ttuZojMiIs20Uiet+8=\", false, function () {\n  return [useParams];\n});\n\n_c = Basket;\nexport default Basket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/pages/CustomerPages/Basket.jsx"],"names":["useEffect","useState","useRef","useContext","AuthContext","useParams","CreateTable","productService","restaurantService","Form","Table","io","socket","connect","Basket","props","isLoggedIn","response","currentOrder","tableId","_id","joinRoom","emit","orders","on","msg","setIsOrder","setIsAcceptedBtn","setOrder","totalProducts","setTotalProducts","ticket","setTicket","changes","setChanges","isOrder","isSubmittedOrder","setIsSubmittedOrder","isReceivedMsg","setIsReceivedMsg","isAcceptedBtn","qtySumOK","setQtySumOK","qtyProductsArr","setQtyProductsArr","didMount","displayOrder","then","data","result","current","orderForm","console","log","isOrderSent","cuenta","createOrder","catch","e","filter","calculateTotal","qtySum","cuentaTotal","newArr","forEach","product","push","Object","keys","flat","flatArr","uniqueKeys","Set","filteredArr","x","item","ord","property","parseInt","menu","getRestaurant","rest","keyArr","key","name","price","handleSubmit","preventDefault","productArr","values","map","entries","idx","length"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../context/auth.context\";\nimport { useParams } from \"react-router-dom\";\nimport CreateTable from \"../../components/table/CreateTable\";\nimport productService from \"../../services/product.services\";\nimport restaurantService from \"../../services/restaurant.services\";\nimport { Form, Table } from \"react-bootstrap\";\nimport io from \"socket.io-client\";\nconst socket = io.connect(\"http://localhost:3001\");\n\n/**\n * Basket\n * @arg props: Object { _id: number, tableId: number }\n */\nfunction Basket(props) {\n  const { isLoggedIn } = useContext(AuthContext);\n\n  let response = \"\";\n  let currentOrder = \"\";\n\n  let { tableId, _id } = useParams();\n\n  if (_id) {\n  } else {\n    _id = props._id;\n    tableId = props.tableId;\n  }\n\n  const joinRoom = () => {\n    socket.emit(\"join_room\", orders);\n  };\n\n  socket.on(\"join_room\", function (msg) {\n    if (msg === \"ACEPTADO\") {\n      setIsOrder(msg);\n      setIsOrder(true);\n      setIsAcceptedBtn(false);\n    }\n  });\n\n  const [orders, setOrder] = useState([]);\n  const [totalProducts, setTotalProducts] = useState({});\n  const [ticket, setTicket] = useState([]);\n  const [changes, setChanges] = useState(false);\n  const [isOrder, setIsOrder] = useState(false);\n  const [isSubmittedOrder, setIsSubmittedOrder] = useState(false);\n  const [isReceivedMsg, setIsReceivedMsg] = useState(false);\n  const [isAcceptedBtn, setIsAcceptedBtn] = useState(false);\n  const [qtySumOK, setQtySumOK] = useState(false)\n  const [qtyProductsArr, setQtyProductsArr] = useState([])\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    productService.displayOrder(tableId).then((response) => {\n      setOrder(response.data.result.currentOrder);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (didMount.current) {\n      setOrder([...orders, props.orderForm]);\n\n      console.log(props.orderForm, \"this is an order form\");\n      console.log(\n        ...orders,\n        \"-------------------------!!!!!!!!!!!!!!!!!!!!!!!\"\n      );\n    } else {\n      didMount.current = true;\n    }\n  }, [props.isOrderSent]);\n  const cuenta = {};\n\n  useEffect(() => {\n    if (didMount.current) {\n      productService\n        .createOrder(...orders, tableId)\n        .then(() => console.log(\"producto creado con exito\"))\n        .catch((e) => console.log(e));\n    } else {\n      didMount.current = true;\n    }\n  }, [isSubmittedOrder]);\n\n  useEffect(() => { ///Renderizado general\n    filter(orders);\n    calculateTotal();\n    qtySum(cuenta)\n    console.log('qty--------------', qtyProductsArr)\n  }, [orders, changes]);\n\n\n  useEffect(() => {\n    setChanges(true);\n  }, [ticket]);\n\n  useEffect(() => {\n    qtySum()\n  }, [cuenta]);\n\n  let cuentaTotal = null;\n\n  function filter() {\n    // suma el total de productos\n    let newArr = [];\n    orders.forEach((product) => {\n      newArr.push(Object.keys(product).flat());\n    });\n    const flatArr = newArr.flat();\n    const uniqueKeys = [...new Set(flatArr)];\n    const filteredArr = uniqueKeys.filter((x) => {\n      return x != \"id\";\n    });\n\n    filteredArr.forEach((item) => {\n      cuenta[item] = 0;\n    });\n\n    filteredArr.forEach((product) => {\n      orders.forEach((ord) => {\n        for (const property in ord) {\n          if (property == product) {\n            cuenta[product] += parseInt(ord[property]);\n          }\n        }\n      });\n    });\n    cuentaTotal = { ...cuenta };\n\n    console.log(\"la cuenta es\", cuentaTotal);\n\n  }\n\n  function calculateTotal() {\n    //multiplica por el total\n\n    let menu = [];\n\n    restaurantService\n      .getRestaurant({ _id })\n      .then((rest) => {\n        menu = rest.data.menu;\n      })\n      .then(() => {\n        let keyArr = Object.keys(cuentaTotal);\n\n        keyArr.forEach((key) => {\n          menu.forEach((item) => {\n            if (item.name === key) {\n              cuentaTotal[key] *= item.price;\n            }\n          });\n        });\n        setTicket(cuentaTotal);\n\n        // const jsx = Object.entries(ticket).forEach(([key, value]) => {});\n      });\n  }\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setIsAcceptedBtn(true);\n    setIsSubmittedOrder(true);\n    joinRoom();\n  };\n\n\n\n  const qtySum = (cuenta) => {\n    if (cuenta) {\n      const productArr = []\n      Object.values(cuenta).map(item => {\n        productArr.push(item)\n      })\n      setQtyProductsArr(productArr)\n      console.log(qtyProductsArr, \"--------------------------------->>>\")\n    }\n\n\n  }\n\n  return (\n    <>\n<Form></Form>\n      {changes &&\n        Object.entries(ticket).map((key, idx) => (\n          <p>\n            {key[0]} {key[1]} Euros. Unidades = {qtyProductsArr[idx]}\n          </p>\n          \n\n        ))}\n      {orders.length !== 0 && (\n        <Form onSubmit={handleSubmit}>\n          {!isAcceptedBtn && !isLoggedIn ? (\n            <button className=\"btn btn-primary\" type=\"submit\">\n              Solicitar pedido\n            </button>\n          ) : (\n            <button className=\"btn btn-primary\" type=\"submit\">\n              <span\n                className={isOrder ? null : \"spinner-border spinner-border-sm\"}\n                // class=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n              <span className=\"sr-only\">\n                {isOrder ? (\n                  <span>Orden Lista</span>\n                ) : (\n                  <span>Esperando confirmación</span>\n                )}\n              </span>\n            </button>\n          )}\n        </Form>\n      )}\n    </>\n  );\n}\nexport default Basket;\n"]},"metadata":{},"sourceType":"module"}