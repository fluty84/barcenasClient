{"ast":null,"code":"import axios from \"axios\";\nimport { useContext, useEffect, useState } from 'react';\nimport { AuthContext } from '../../context/auth.context';\n\nclass RestaurantService {\n  constructor(user) {\n    this.getRestaurant = () => {\n      return this.api.get(`/restaurant/${this.user._id}`);\n    };\n\n    this.saveRestaurant = restaurant => {\n      return this.api.post('/create', restaurant);\n    };\n\n    this.api = axios.create({\n      baseURL: 'http://localhost:5005/api'\n    });\n    this.user = user;\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  verify(token) {\n    return this.api.get('/verify', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nconst restaurantService = new RestaurantService();\nexport default restaurantService;","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/barcenas/client/src/services/restaurant.services.js"],"names":["axios","useContext","useEffect","useState","AuthContext","RestaurantService","constructor","user","getRestaurant","api","get","_id","saveRestaurant","restaurant","post","create","baseURL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","verify","token","restaurantService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,MAAMC,iBAAN,CAAwB;AAEpBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAA,SAqBlBC,aArBkB,GAqBF,MAAM;AAClB,aAAO,KAAKC,GAAL,CAASC,GAAT,CAAc,eAAc,KAAKH,IAAL,CAAUI,GAAI,EAA1C,CAAP;AACH,KAvBiB;;AAAA,SAyBlBC,cAzBkB,GAyBDC,UAAU,IAAI;AAC3B,aAAO,KAAKJ,GAAL,CAASK,IAAT,CAAc,SAAd,EAAyBD,UAAzB,CAAP;AACH,KA3BiB;;AACd,SAAKJ,GAAL,GAAWT,KAAK,CAACe,MAAN,CAAa;AAEpBC,MAAAA,OAAO,EAAE;AAFW,KAAb,CAAX;AAKA,SAAKT,IAAL,GAAYA,IAAZ;AAEA,SAAKE,GAAL,CAASQ,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAE9C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AACbD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACH;;AAED,aAAOD,MAAP;AAEC,KAVD;AAWH;;AAUDM,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,WAAO,KAAKlB,GAAL,CAASC,GAAT,CAAa,SAAb,EAAwB;AAAEc,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASE,KAAM;AAAjC;AAAX,KAAxB,CAAP;AACH;;AAjCmB;;AAoCxB,MAAMC,iBAAiB,GAAG,IAAIvB,iBAAJ,EAA1B;AAEA,eAAeuB,iBAAf","sourcesContent":["import axios from \"axios\"\nimport { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../context/auth.context'\n\nclass RestaurantService {\n\n    constructor(user) {\n        this.api = axios.create({\n\n            baseURL: 'http://localhost:5005/api'\n\n        })\n        this.user = user\n\n        this.api.interceptors.request.use((config) => {\n\n        const storedToken = localStorage.getItem(\"authToken\");\n\n        if (storedToken) {\n            config.headers = { Authorization: `Bearer ${storedToken}` }\n        }\n\n        return config\n\n        })\n    }\n\n    getRestaurant = () => {\n        return this.api.get(`/restaurant/${this.user._id}`)\n    }\n    \n    saveRestaurant = restaurant => {\n        return this.api.post('/create', restaurant)\n    }\n\n    verify(token) {\n        return this.api.get('/verify', { headers: { Authorization: `Bearer ${token}` } })\n    }\n}\n\nconst restaurantService = new RestaurantService()\n\nexport default restaurantService"]},"metadata":{},"sourceType":"module"}