{"ast":null,"code":"var _jsxFileName = \"/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/components/checkout/FinalOrder/FinalOrder.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport restaurantService from \"../../../services/restaurant.services\";\nimport { AuthContext } from \"../../../context/auth.context\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FinalOrder = () => {\n  _s();\n\n  const {\n    id,\n    tableId\n  } = useParams();\n  const [finalOrderData, setFinalOrderData] = useState([]);\n  const [orderDataNoIds, setOrderDataNoIds] = useState([]);\n  const [arrFinalOrder, setArrFinalOrder] = useState([]);\n  const [menuData, setMenuData] = useState([]);\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n  useEffect(() => {\n    objToArr(orderDataNoIds);\n  }, [orderDataNoIds]);\n  useEffect(() => {\n    filterOutIds(finalOrderData);\n  }, [finalOrderData]);\n  useEffect(() => {\n    restaurantService.checkTable(tableId).then(res => setFinalOrderData(res.data.total.flat())).catch(e => console.log(e));\n  }, []);\n\n  const filterOutIds = arrOfObjects => {\n    const objectWithoutId = [];\n    arrOfObjects.forEach(elm => {\n      const {\n        id,\n        ...rest\n      } = elm;\n      objectWithoutId.push(rest);\n    });\n    setOrderDataNoIds(objectWithoutId);\n  };\n\n  const objToArr = arrOfObjects => {\n    const arrOfOrders = [];\n    restaurantService.getRestaurant({\n      _id: id\n    }).then(res => setMenuData(res.data.menu)).then(() => {\n      arrOfObjects.forEach((elm, index) => {\n        arrOfOrders.push(Object.entries(elm));\n        menuData.forEach(menuItem => {\n          for (const property in menuItem) {\n            console.log(menuItem.property);\n            arrOfOrders.forEach((item, index) => {\n              if (menuItem.name === arrOfOrders[index][0][0]) {\n                arrOfOrders[index][0].length < 3 && arrOfOrders[index][0].push(menuItem.price);\n              }\n            });\n          }\n        });\n      });\n    }).then(() => setArrFinalOrder(arrOfOrders.flat()));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"FINAL ORDER: PAGA CABRON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"foodList\",\n      method: \"POST\",\n      action: \"http://localhost:5005/api/update-total\",\n      children: [arrFinalOrder.map(order => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [order[0], \", \", order[1], \", \", order[2]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"input-group-text\",\n              children: order[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              class: \"form-control\",\n              name: order[0],\n              \"aria-label\": \"Dollar amount (with dot and two decimal places)\",\n              defaultValue: order[1],\n              min: \"0\",\n              max: \"100\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"hidden\",\n              value: tableId,\n              name: \"id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"input-group-text\",\n              children: \"\\u20AC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"input-group-text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this);\n      }), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Acutualizar cuenta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }, this) : \"boton del cliente\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FinalOrder, \"UixQwECToFv/VlAhnfUFU+jBnjk=\", false, function () {\n  return [useParams];\n});\n\n_c = FinalOrder;\nexport default FinalOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinalOrder\");","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/components/checkout/FinalOrder/FinalOrder.jsx"],"names":["React","useEffect","useState","useParams","restaurantService","AuthContext","useContext","FinalOrder","id","tableId","finalOrderData","setFinalOrderData","orderDataNoIds","setOrderDataNoIds","arrFinalOrder","setArrFinalOrder","menuData","setMenuData","isLoggedIn","objToArr","filterOutIds","checkTable","then","res","data","total","flat","catch","e","console","log","arrOfObjects","objectWithoutId","forEach","elm","rest","push","arrOfOrders","getRestaurant","_id","menu","index","Object","entries","menuItem","property","item","name","length","price","map","order"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport restaurantService from \"../../../services/restaurant.services\";\nimport { AuthContext } from \"../../../context/auth.context\";\nimport { useContext } from \"react\";\n\nconst FinalOrder = () => {\n\n  const { id, tableId } = useParams();\n\n\n  const [finalOrderData, setFinalOrderData] = useState([]);\n  const [orderDataNoIds, setOrderDataNoIds] = useState([]);\n  const [arrFinalOrder, setArrFinalOrder] = useState([]);\n  const [menuData, setMenuData] = useState([]);\n\n  const { isLoggedIn } = useContext(AuthContext);\n  useEffect(() => {\n    objToArr(orderDataNoIds);\n  }, [orderDataNoIds]);\n\n  useEffect(() => {\n    filterOutIds(finalOrderData);\n  }, [finalOrderData]);\n\n  useEffect(() => {\n    restaurantService\n      .checkTable(tableId)\n      .then((res) => setFinalOrderData(res.data.total.flat()))\n      .catch((e) => console.log(e));\n  }, []);\n\n  const filterOutIds = (arrOfObjects) => {\n    const objectWithoutId = [];\n    arrOfObjects.forEach((elm) => {\n      const { id, ...rest } = elm;\n      objectWithoutId.push(rest);\n    });\n    setOrderDataNoIds(objectWithoutId);\n  };\n\n  const objToArr = (arrOfObjects) => {\n    const arrOfOrders = [];\n    restaurantService\n      .getRestaurant({ _id: id })\n      .then((res) => setMenuData(res.data.menu))\n      .then(() => {\n        arrOfObjects.forEach((elm, index) => {\n\n          arrOfOrders.push(Object.entries(elm));\n  \n          menuData.forEach((menuItem) => {\n            for (const property in menuItem) {\n              console.log(menuItem.property)\n              arrOfOrders.forEach((item, index) => {\n              \n                if (menuItem.name === arrOfOrders[index][0][0]) {\n                  arrOfOrders[index][0].length < 3 &&\n                    arrOfOrders[index][0].push(menuItem.price)\n                }\n\n              })\n\n            }\n          });\n        });\n      })\n      .then(() => setArrFinalOrder((arrOfOrders.flat())))\n  }\n\n  return (\n    <>\n      <h1>FINAL ORDER: PAGA CABRON</h1>\n\n      <form\n        className=\"foodList\"\n        method=\"POST\"\n        action=\"http://localhost:5005/api/update-total\"\n      >\n        {arrFinalOrder.map((order) => {\n          return (\n            <div class=\"mb-3\">\n              <div class=\"input-group\">\n                <p>{order[0]}, {order[1]}, {order[2]}</p>\n                <span class=\"input-group-text\">{order[0]}</span>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name={order[0]}\n                  aria-label=\"Dollar amount (with dot and two decimal places)\"\n                  defaultValue={order[1]}\n                  min=\"0\"\n                  max=\"100\"\n                />\n                <input type=\"hidden\" value={tableId} name=\"id\"></input>\n                <span class=\"input-group-text\">€</span>\n                <span class=\"input-group-text\">\n                  {/* {parseInt(order[1]) * order[2]} */}\n                </span>\n              </div>\n            </div>\n          );\n        })}\n        {isLoggedIn ? <button>Acutualizar cuenta</button> : \"boton del cliente\"}\n      </form>\n    </>\n  );\n};\n\nexport default FinalOrder;\n"]},"metadata":{},"sourceType":"module"}