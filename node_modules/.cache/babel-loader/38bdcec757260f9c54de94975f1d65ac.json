{"ast":null,"code":"var _jsxFileName = \"/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/pages/CustomerPages/Basket.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CreateTable from \"../../components/table/CreateTable\";\nimport productService from \"../../services/product.services\";\nimport restaurantService from \"../../services/restaurant.services\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n/**\n * Basket \n * @arg props: Object { _id}\n */\n\nfunction Basket(props) {\n  _s();\n\n  let response = \"\";\n  let currentOrder = \"\";\n  let {\n    tableId,\n    _id\n  } = useParams();\n  console.log(Object.keys(useParams()));\n\n  if (_id) {\n    console.log(\"heyeyye jude\");\n  } else {\n    _id = props._id;\n    tableId = props.tableId;\n  }\n\n  const [orders, setOrder] = useState([]);\n  const [totalProducts, setTotalProducts] = useState({});\n  const [ticket, setTicket] = useState([]);\n  const [changes, setChanges] = useState(false);\n  const [isOrder, setIsOrder] = useState(false);\n  socket.on(\"join_room\", function (msg) {\n    console.log(msg, \"en dayPanel\");\n    setIsOrder(msg);\n  });\n  useEffect(() => {\n    productService.displayOrder(tableId).then(response => {\n      setOrder(response.data.result.currentOrder);\n    });\n  }, []);\n  const cuenta = {};\n  useEffect(() => {\n    filter(orders);\n    calculateTotal();\n  }, [orders, changes]);\n  useEffect(() => {\n    setChanges(true);\n  }, [ticket]);\n  let cuentaTotal = null;\n\n  function filter() {\n    // suma el total de productos\n    let newArr = [];\n    orders.forEach(x => {\n      newArr.push(Object.keys(x).flat());\n    });\n    const flatArr = newArr.flat();\n    const uniqueKeys = [...new Set(flatArr)];\n    const filteredArr = uniqueKeys.filter(x => {\n      return x != \"id\";\n    });\n    filteredArr.forEach(item => {\n      cuenta[item] = 0;\n    });\n    filteredArr.forEach(product => {\n      orders.forEach(ord => {\n        for (const property in ord) {\n          if (property == product) {\n            cuenta[product] += parseInt(ord[property]);\n          }\n        }\n      });\n    });\n    cuentaTotal = { ...cuenta\n    };\n  }\n\n  function calculateTotal() {\n    //multiplica por el total\n    let menu = [];\n    restaurantService.getRestaurant({\n      _id\n    }).then(rest => {\n      menu = rest.data.menu;\n    }).then(() => {\n      let keyArr = Object.keys(cuentaTotal);\n      keyArr.forEach(key => {\n        menu.forEach(item => {\n          if (item.name === key) {\n            cuentaTotal[key] *= item.price;\n          }\n        });\n      });\n      setTicket(cuentaTotal);\n      console.log(\"el ticket\", ticket); // const jsx = Object.entries(ticket).forEach(([key, value]) => {});\n    });\n  } // const isNew = () => {\n  //   if(JSON.stringify(ticket) != JSON.stringify(cuenta)){\n  //     setChanges(true)\n  //   }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [changes && Object.entries(ticket).map((key, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [key[0], \" \", key[1]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      type: \"button\",\n      disabled: true,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: isOrder ? null : \"spinner-border spinner-border-sm\" // class=\"spinner-border spinner-border-sm\"\n        ,\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"sr-only\",\n        children: isOrder ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Orden Lista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Esperando confirmaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Basket, \"sMoDKAMHM5M6cXJPFV2eTGIgEBw=\", false, function () {\n  return [useParams, useParams];\n});\n\n_c = Basket;\nexport default Basket; //  Object.entries(ticket).forEach(([key, value]) => {\n//           return (\n//             <li>\n//               {\" \"}\n//               {key} total {value}{\" \"}\n//             </li>\n//           );\n//         })\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/pages/CustomerPages/Basket.jsx"],"names":["useEffect","useState","useParams","CreateTable","productService","restaurantService","io","socket","connect","Basket","props","response","currentOrder","tableId","_id","console","log","Object","keys","orders","setOrder","totalProducts","setTotalProducts","ticket","setTicket","changes","setChanges","isOrder","setIsOrder","on","msg","displayOrder","then","data","result","cuenta","filter","calculateTotal","cuentaTotal","newArr","forEach","x","push","flat","flatArr","uniqueKeys","Set","filteredArr","item","product","ord","property","parseInt","menu","getRestaurant","rest","keyArr","key","name","price","entries","map","idx"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CreateTable from \"../../components/table/CreateTable\";\nimport productService from \"../../services/product.services\";\nimport restaurantService from \"../../services/restaurant.services\";\nimport io from \"socket.io-client\";\nconst socket = io.connect(\"http://localhost:3001\");\n\n/**\n * Basket \n * @arg props: Object { _id}\n */\nfunction Basket(props) {\n  let response = \"\";\n  let currentOrder = \"\";\n\n  let { tableId, _id } = useParams();\n  console.log(Object.keys(useParams()));\n\n  if (_id) {\n    console.log(\"heyeyye jude\");\n  } else {\n    _id = props._id;\n    tableId = props.tableId;\n  }\n\n  const [orders, setOrder] = useState([]);\n  const [totalProducts, setTotalProducts] = useState({});\n  const [ticket, setTicket] = useState([]);\n  const [changes, setChanges] = useState(false);\n  const [isOrder, setIsOrder] = useState(false);\n\n  socket.on(\"join_room\", function (msg) {\n    console.log(msg, \"en dayPanel\");\n    setIsOrder(msg);\n  });\n\n  useEffect(() => {\n    productService.displayOrder(tableId).then((response) => {\n      setOrder(response.data.result.currentOrder);\n    });\n  }, []);\n  const cuenta = {};\n\n  useEffect(() => {\n    filter(orders);\n    calculateTotal();\n  }, [orders, changes]);\n\n  useEffect(() => {\n    setChanges(true);\n  }, [ticket]);\n\n  let cuentaTotal = null;\n\n  function filter() {\n    // suma el total de productos\n    let newArr = [];\n    orders.forEach((x) => {\n      newArr.push(Object.keys(x).flat());\n    });\n    const flatArr = newArr.flat();\n    const uniqueKeys = [...new Set(flatArr)];\n    const filteredArr = uniqueKeys.filter((x) => {\n      return x != \"id\";\n    });\n\n    filteredArr.forEach((item) => {\n      cuenta[item] = 0;\n    });\n\n    filteredArr.forEach((product) => {\n      orders.forEach((ord) => {\n        for (const property in ord) {\n          if (property == product) {\n            cuenta[product] += parseInt(ord[property]);\n          }\n        }\n      });\n    });\n    cuentaTotal = { ...cuenta };\n  }\n\n  function calculateTotal() {\n    //multiplica por el total\n\n    let menu = [];\n\n    restaurantService\n      .getRestaurant({ _id })\n      .then((rest) => {\n        menu = rest.data.menu;\n      })\n      .then(() => {\n        let keyArr = Object.keys(cuentaTotal);\n\n        keyArr.forEach((key) => {\n          menu.forEach((item) => {\n            if (item.name === key) {\n              cuentaTotal[key] *= item.price;\n            }\n          });\n        });\n        setTicket(cuentaTotal);\n        console.log(\"el ticket\", ticket);\n        // const jsx = Object.entries(ticket).forEach(([key, value]) => {});\n      });\n  }\n\n  // const isNew = () => {\n\n  //   if(JSON.stringify(ticket) != JSON.stringify(cuenta)){\n  //     setChanges(true)\n  //   }\n  // }\n\n  return (\n    <>\n      {changes &&\n        Object.entries(ticket).map((key, idx) => (\n          <p>\n            {key[0]} {key[1]}\n          </p>\n        ))}\n      <button class=\"btn btn-primary\" type=\"button\" disabled>\n        <span\n          class={isOrder ? null : \"spinner-border spinner-border-sm\"}\n          // class=\"spinner-border spinner-border-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n        <span class=\"sr-only\">\n          {isOrder ? (\n            <span>Orden Lista</span>\n          ) : (\n            <span>Esperando confirmación</span>\n          )}\n        </span>\n      </button>\n    </>\n  );\n}\nexport default Basket;\n\n//  Object.entries(ticket).forEach(([key, value]) => {\n//           return (\n//             <li>\n//               {\" \"}\n//               {key} total {value}{\" \"}\n//             </li>\n//           );\n//         })\n"]},"metadata":{},"sourceType":"module"}