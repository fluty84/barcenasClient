{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonza\\\\Desktop\\\\ironhack\\\\9week\\\\barcenasClient\\\\src\\\\components\\\\basket\\\\Basket.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef, useContext } from \"react\";\nimport { AuthContext } from \"../../context/auth.context\";\nimport { useParams } from \"react-router-dom\";\nimport CreateTable from \"../table/CreateTable\";\nimport productService from \"../../services/product.services\";\nimport restaurantService from \"../../services/restaurant.services\";\nimport { Form, Table } from \"react-bootstrap\";\nimport io from \"socket.io-client\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction Basket(props) {\n  _s();\n\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n  let response = \"\";\n  let currentOrder = \"\";\n  let {\n    tableId,\n    _id\n  } = useParams();\n\n  if (_id) {} else {\n    _id = props._id;\n    tableId = props.tableId;\n  }\n\n  const joinRoom = () => {\n    socket.emit(\"join_room\", orders);\n  };\n\n  socket.on(\"join_room\", function (msg) {\n    if (msg === \"ACEPTADO\") {\n      setIsOrder(msg);\n      setIsOrder(true);\n      setIsAcceptedBtn(false);\n    }\n  });\n  const [orders, setOrder] = useState([]);\n  const [ticket, setTicket] = useState([]);\n  const [changes, setChanges] = useState(false);\n  const [isOrder, setIsOrder] = useState(false);\n  const [isSubmittedOrder, setIsSubmittedOrder] = useState(false);\n  const [isAcceptedBtn, setIsAcceptedBtn] = useState(false);\n  const [qtyProductsArr, setQtyProductsArr] = useState([]);\n  const [orderForm, setOrderForm] = useState(props.orderForm);\n  const didMount = useRef(false);\n  useEffect(() => {\n    productService.displayOrder(tableId).then(response => {\n      setOrder(response.data.result.currentOrder);\n    });\n  }, []);\n  useEffect(() => {\n    if (didMount.current) {\n      setOrder([...orders, props.orderForm]);\n    } else {\n      didMount.current = true;\n    }\n  }, [props.isOrderSent]);\n  const cuenta = {}; //TODO filter object orders with key-values that are greater than 0\n\n  useEffect(() => {\n    if (didMount.current) {\n      productService.createOrder(...orders, tableId).then(() => console.log(\"producto creado con exito\")).catch(err => console.log(err));\n    } else {\n      didMount.current = true;\n    }\n  }, [isSubmittedOrder]);\n  useEffect(() => {\n    ///Renderizado general\n    filter(orders);\n    calculateTotal();\n    qtySum(cuenta);\n  }, [orders, changes]);\n  useEffect(() => {\n    setChanges(true);\n  }, [ticket]);\n  useEffect(() => {\n    qtySum();\n  }, [cuenta]);\n  let cuentaTotal = null;\n\n  function filter() {\n    // suma el total de productos\n    let newArr = [];\n    orders.forEach(product => {\n      newArr.push(Object.keys(product).flat());\n    });\n    const flatArr = newArr.flat();\n    const uniqueKeys = [...new Set(flatArr)];\n    const filteredArr = uniqueKeys.filter(x => {\n      return x != \"id\";\n    });\n    filteredArr.forEach(item => {\n      cuenta[item] = 0;\n    });\n    filteredArr.forEach(product => {\n      orders.forEach(ord => {\n        for (const property in ord) {\n          if (property == product) {\n            cuenta[product] += parseInt(ord[property]);\n          }\n        }\n      });\n    });\n    cuentaTotal = { ...cuenta\n    };\n  }\n\n  function calculateTotal() {\n    //multiplica por el total\n    let menu = [];\n    restaurantService.getRestaurant({\n      _id\n    }).then(rest => {\n      menu = rest.data.menu;\n    }).then(() => {\n      let keyArr = Object.keys(cuentaTotal);\n      keyArr.forEach(key => {\n        menu.forEach(item => {\n          if (item.name === key) {\n            cuentaTotal[key] *= item.price;\n          }\n        });\n      });\n      setTicket(cuentaTotal); // const jsx = Object.entries(ticket).forEach(([key, value]) => {});\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setIsAcceptedBtn(true);\n    setIsSubmittedOrder(true);\n    joinRoom();\n  };\n\n  const qtySum = cuenta => {\n    if (cuenta) {\n      const productArr = [];\n      Object.values(cuenta).map(item => {\n        productArr.push(item);\n      });\n      setQtyProductsArr(productArr);\n    }\n  };\n\n  useEffect(() => {\n    if (props.isTicketModified) {\n      setTicket([]);\n      setOrder([]);\n      props.toggleTicket();\n    }\n  }, [props.isTicketModified]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [changes && Object.entries(ticket).map((key, idx) => key[1] > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [key[0], \" \", key[1], \" Euros. Unidades = \", qtyProductsArr[idx]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }, this) : null), orders.length !== 0 && /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: !isAcceptedBtn && !isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: \"Solicitar pedido\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: isOrder ? null : \"spinner-border spinner-border-sm\" // class=\"spinner-border spinner-border-sm\"\n          ,\n          role: \"status\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: isOrder ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Orden Lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Esperando confirmaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: props.clearOrder,\n      children: \"Modificar Pedido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Basket, \"dmip1/yzNyIPx52AhxtS9hDsLKo=\", false, function () {\n  return [useParams];\n});\n\n_c = Basket;\nexport default Basket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Basket\");","map":{"version":3,"sources":["C:/Users/gonza/Desktop/ironhack/9week/barcenasClient/src/components/basket/Basket.jsx"],"names":["useEffect","useState","useRef","useContext","AuthContext","useParams","CreateTable","productService","restaurantService","Form","Table","io","Button","socket","connect","Basket","props","isLoggedIn","response","currentOrder","tableId","_id","joinRoom","emit","orders","on","msg","setIsOrder","setIsAcceptedBtn","setOrder","ticket","setTicket","changes","setChanges","isOrder","isSubmittedOrder","setIsSubmittedOrder","isAcceptedBtn","qtyProductsArr","setQtyProductsArr","orderForm","setOrderForm","didMount","displayOrder","then","data","result","current","isOrderSent","cuenta","createOrder","console","log","catch","err","filter","calculateTotal","qtySum","cuentaTotal","newArr","forEach","product","push","Object","keys","flat","flatArr","uniqueKeys","Set","filteredArr","x","item","ord","property","parseInt","menu","getRestaurant","rest","keyArr","key","name","price","handleSubmit","e","preventDefault","productArr","values","map","isTicketModified","toggleTicket","entries","idx","length","clearOrder"],"mappings":"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","sourcesContent":["import { useEffect, useState, useRef, useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/auth.context\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport CreateTable from \"../table/CreateTable\";\r\nimport productService from \"../../services/product.services\";\r\nimport restaurantService from \"../../services/restaurant.services\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport io from \"socket.io-client\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst socket = io.connect(\"http://localhost:3001\");\r\n\r\nfunction Basket(props) {\r\n\r\n  const { isLoggedIn } = useContext(AuthContext);\r\n\r\n  let response = \"\";\r\n  let currentOrder = \"\";\r\n\r\n  let { tableId, _id } = useParams();\r\n\r\n  if (_id) {\r\n  } else {\r\n    _id = props._id;\r\n    tableId = props.tableId;\r\n  }\r\n\r\n  const joinRoom = () => {\r\n    socket.emit(\"join_room\", orders);\r\n  };\r\n\r\n  socket.on(\"join_room\", function (msg) {\r\n    if (msg === \"ACEPTADO\") {\r\n      setIsOrder(msg);\r\n      setIsOrder(true);\r\n      setIsAcceptedBtn(false);\r\n    }\r\n  });\r\n\r\n  const [orders, setOrder] = useState([]);\r\n  const [ticket, setTicket] = useState([]);\r\n  const [changes, setChanges] = useState(false);\r\n  const [isOrder, setIsOrder] = useState(false);\r\n  const [isSubmittedOrder, setIsSubmittedOrder] = useState(false);\r\n  const [isAcceptedBtn, setIsAcceptedBtn] = useState(false);\r\n  const [qtyProductsArr, setQtyProductsArr] = useState([])\r\n  const [orderForm, setOrderForm] = useState(props.orderForm);\r\n\r\n  const didMount = useRef(false);\r\n\r\n  useEffect(() => {\r\n    productService.displayOrder(tableId).then((response) => {\r\n      setOrder(response.data.result.currentOrder);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) {\r\n      setOrder([...orders, props.orderForm]);\r\n    } else {\r\n      didMount.current = true;\r\n    }\r\n  }, [props.isOrderSent]);\r\n  const cuenta = {};\r\n\r\n  //TODO filter object orders with key-values that are greater than 0\r\n\r\n  useEffect(() => {\r\n    if (didMount.current) {\r\n      productService\r\n        .createOrder(...orders, tableId)\r\n        .then(() => console.log(\"producto creado con exito\"))\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      didMount.current = true;\r\n    }\r\n  }, [isSubmittedOrder]);\r\n\r\n  useEffect(() => { ///Renderizado general\r\n    filter(orders);\r\n    calculateTotal();\r\n    qtySum(cuenta)\r\n  }, [orders, changes]);\r\n\r\n\r\n  useEffect(() => {\r\n    setChanges(true);\r\n  }, [ticket]);\r\n\r\n  useEffect(() => {\r\n    qtySum()\r\n  }, [cuenta]);\r\n\r\n  let cuentaTotal = null;\r\n\r\n  function filter() {\r\n    // suma el total de productos\r\n    let newArr = [];\r\n    orders.forEach((product) => {\r\n      newArr.push(Object.keys(product).flat());\r\n    });\r\n    const flatArr = newArr.flat();\r\n    const uniqueKeys = [...new Set(flatArr)];\r\n    const filteredArr = uniqueKeys.filter((x) => {\r\n      return x != \"id\";\r\n    });\r\n\r\n    filteredArr.forEach((item) => {\r\n      cuenta[item] = 0;\r\n    });\r\n\r\n    filteredArr.forEach((product) => {\r\n      orders.forEach((ord) => {\r\n        for (const property in ord) {\r\n          if (property == product) {\r\n            cuenta[product] += parseInt(ord[property]);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    cuentaTotal = { ...cuenta };\r\n\r\n\r\n  }\r\n\r\n  function calculateTotal() {\r\n    //multiplica por el total\r\n\r\n    let menu = [];\r\n\r\n    restaurantService\r\n      .getRestaurant({ _id })\r\n      .then((rest) => {\r\n        menu = rest.data.menu;\r\n      })\r\n      .then(() => {\r\n        let keyArr = Object.keys(cuentaTotal);\r\n\r\n        keyArr.forEach((key) => {\r\n          menu.forEach((item) => {\r\n            if (item.name === key) {\r\n              cuentaTotal[key] *= item.price;\r\n            }\r\n          });\r\n        });\r\n        setTicket(cuentaTotal);\r\n\r\n        // const jsx = Object.entries(ticket).forEach(([key, value]) => {});\r\n      });\r\n  }\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setIsAcceptedBtn(true);\r\n    setIsSubmittedOrder(true);\r\n    joinRoom();\r\n  };\r\n\r\n\r\n\r\n  const qtySum = (cuenta) => {\r\n    if (cuenta) {\r\n      const productArr = []\r\n      Object.values(cuenta).map(item => {\r\n        productArr.push(item)\r\n      })\r\n      setQtyProductsArr(productArr)\r\n\r\n    }\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.isTicketModified) {\r\n      setTicket([])\r\n      setOrder([])\r\n      props.toggleTicket()\r\n    }\r\n  }, [props.isTicketModified])\r\n\r\n  return (\r\n    <>\r\n\r\n      {changes &&\r\n        Object.entries(ticket).map((key, idx) => (\r\n\r\n          key[1] > 0 ? (<div className=\"food\">\r\n            <p>\r\n              {key[0]} {key[1]} Euros. Unidades = {qtyProductsArr[idx]}\r\n            </p>\r\n\r\n          </div>) : null\r\n\r\n        ))}\r\n\r\n\r\n      {orders.length !== 0 && (\r\n        <Form onSubmit={handleSubmit}>\r\n          {!isAcceptedBtn && !isLoggedIn ? (\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Solicitar pedido\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              <span\r\n                className={isOrder ? null : \"spinner-border spinner-border-sm\"}\r\n                // class=\"spinner-border spinner-border-sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              ></span>\r\n              <span className=\"sr-only\">\r\n                {isOrder ? (\r\n                  <span>Orden Lista</span>\r\n                ) : (\r\n                  <span>Esperando confirmación</span>\r\n                )}\r\n              </span>\r\n            </button>\r\n          )}\r\n        </Form>\r\n      )}\r\n      <Button onClick={props.clearOrder}>Modificar Pedido</Button>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\nexport default Basket;\r\n"]},"metadata":{},"sourceType":"module"}