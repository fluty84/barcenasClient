{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\"];\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\r\n * An unstyled option to be used within a SelectUnstyled.\r\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  var _componentsProps$root;\n\n  const {\n    children,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    disabled,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || components.Root || 'li';\n  const selectOption = {\n    value,\n    label: children,\n    disabled\n  };\n  const optionState = selectContext.getOptionState(selectOption);\n  const optionProps = selectContext.getOptionProps(selectOption);\n\n  const ownerState = _extends({}, props, optionState);\n\n  const optionRef = React.useRef(null);\n  const handleRef = useForkRef(ref, optionRef);\n  React.useEffect(() => {\n    if (optionState.highlighted) {\n      var _optionRef$current, _optionRef$current$sc;\n\n      (_optionRef$current = optionRef.current) == null ? void 0 : (_optionRef$current$sc = _optionRef$current.scrollIntoView) == null ? void 0 : _optionRef$current$sc.call(_optionRef$current, {\n        block: 'nearest'\n      });\n    }\n  }, [optionState.highlighted]);\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = appendOwnerState(Root, _extends({}, other, {\n    ref: handleRef\n  }, optionProps, componentsProps.root, {\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\n  }), ownerState);\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * @ignore\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the Root slot.\r\n   * Either a string to use a HTML element or a component.\r\n   * This is equivalent to components.Root.\r\n   * If both are provided, the component is used.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * The components used for each slot inside the OptionUnstyled.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\r\n   * The props used for each slot inside the Input.\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.shape({\n    root: PropTypes.object\n  }),\n\n  /**\r\n   * If `true`, the option will be disabled.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * The value of the option.\r\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\r\n * An unstyled option to be used within a SelectUnstyled.\r\n *\r\n * Demos:\r\n *\r\n * - [Selects](https://mui.com/components/selects/)\r\n *\r\n * API:\r\n *\r\n * - [OptionUnstyled API](https://mui.com/api/option-unstyled/)\r\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"sources":["C:/Users/gonza/Desktop/ironhack/9week/barcenasClient/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","PropTypes","unstable_useForkRef","useForkRef","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","appendOwnerState","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","_componentsProps$root","children","className","component","components","componentsProps","value","other","selectContext","useContext","Error","Root","selectOption","label","optionState","getOptionState","optionProps","getOptionProps","optionRef","useRef","handleRef","useEffect","_optionRef$current","_optionRef$current$sc","current","scrollIntoView","call","block","classes","rootProps","process","env","NODE_ENV","propTypes","node","string","elementType","shape","object","bool","any","isRequired","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"disabled\", \"value\"];\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport composeClasses from '../composeClasses';\r\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\r\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\r\nimport appendOwnerState from '../utils/appendOwnerState';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nfunction useUtilityClasses(ownerState) {\r\n  const {\r\n    disabled,\r\n    highlighted,\r\n    selected\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\r\n  };\r\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\r\n}\r\n/**\r\n * An unstyled option to be used within a SelectUnstyled.\r\n */\r\n\r\n\r\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\r\n  var _componentsProps$root;\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    component,\r\n    components = {},\r\n    componentsProps = {},\r\n    disabled,\r\n    value\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, _excluded);\r\n\r\n  const selectContext = React.useContext(SelectUnstyledContext);\r\n\r\n  if (!selectContext) {\r\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\r\n  }\r\n\r\n  const Root = component || components.Root || 'li';\r\n  const selectOption = {\r\n    value,\r\n    label: children,\r\n    disabled\r\n  };\r\n  const optionState = selectContext.getOptionState(selectOption);\r\n  const optionProps = selectContext.getOptionProps(selectOption);\r\n\r\n  const ownerState = _extends({}, props, optionState);\r\n\r\n  const optionRef = React.useRef(null);\r\n  const handleRef = useForkRef(ref, optionRef);\r\n  React.useEffect(() => {\r\n    if (optionState.highlighted) {\r\n      var _optionRef$current, _optionRef$current$sc;\r\n\r\n      (_optionRef$current = optionRef.current) == null ? void 0 : (_optionRef$current$sc = _optionRef$current.scrollIntoView) == null ? void 0 : _optionRef$current$sc.call(_optionRef$current, {\r\n        block: 'nearest'\r\n      });\r\n    }\r\n  }, [optionState.highlighted]);\r\n  const classes = useUtilityClasses(ownerState);\r\n  const rootProps = appendOwnerState(Root, _extends({}, other, {\r\n    ref: handleRef\r\n  }, optionProps, componentsProps.root, {\r\n    className: clsx(classes.root, className, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)\r\n  }), ownerState);\r\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\r\n    children: children\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the Root slot.\r\n   * Either a string to use a HTML element or a component.\r\n   * This is equivalent to components.Root.\r\n   * If both are provided, the component is used.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * The components used for each slot inside the OptionUnstyled.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    Root: PropTypes.elementType\r\n  }),\r\n\r\n  /**\r\n   * The props used for each slot inside the Input.\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.shape({\r\n    root: PropTypes.object\r\n  }),\r\n\r\n  /**\r\n   * If `true`, the option will be disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * The value of the option.\r\n   */\r\n  value: PropTypes.any.isRequired\r\n} : void 0;\r\n/**\r\n * An unstyled option to be used within a SelectUnstyled.\r\n *\r\n * Demos:\r\n *\r\n * - [Selects](https://mui.com/components/selects/)\r\n *\r\n * API:\r\n *\r\n * - [OptionUnstyled API](https://mui.com/api/option-unstyled/)\r\n */\r\n\r\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"]},"metadata":{},"sourceType":"module"}