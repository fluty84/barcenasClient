{"ast":null,"code":"var _jsxFileName = \"/Users/gordi/Desktop/Ironhack/barcenas/client/src/components/login/login.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../login/login.css\";\nimport TextField from \"@mui/material/TextField\";\nimport authService from \"../../services/auth.services\";\nimport { AuthContext } from \"./../../context/auth.context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [loginForm, setLoginForm] = useState({\n    restaurant: \"\",\n    password: \"\"\n  }); //  const { setShowMessage, setMessageInfo } = useContext(MessageContext)\n\n  const {\n    storeToken,\n    authenticateUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    restaurant,\n    password\n  } = loginForm;\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginForm({ ...loginForm,\n      [name]: value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    authService.login(loginForm).then(_ref => {\n      let {\n        data\n      } = _ref;\n      //console.log(\"JWT token\", data.authToken)\n      storeToken(data.authToken);\n      authenticateUser(); // setShowMessage(true)\n      // setMessageInfo({ title: 'Éxito', desc: 'Sesión iniciada correctamente' })\n\n      navigate(\"/\");\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login-form\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-required-input\",\n          label: \"Restaurant\",\n          name: \"restaurant\",\n          type: \"text\",\n          onChange: handleInputChange,\n          value: restaurant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-password-input\",\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\",\n          onChange: handleInputChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"LJSMnQm4zdNj+NJfsBNlEB0gH6I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/barcenas/client/src/components/login/login.jsx"],"names":["useState","useContext","Form","Button","TextField","authService","AuthContext","useNavigate","LoginPage","loginForm","setLoginForm","restaurant","password","storeToken","authenticateUser","navigate","handleInputChange","e","name","value","target","handleSubmit","preventDefault","login","then","data","authToken","catch","err","console","log"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,oBAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC;AACzCW,IAAAA,UAAU,EAAE,EAD6B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C,CADsB,CAMtB;;AACA,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAmCb,UAAU,CAACK,WAAD,CAAnD;AAEA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BH,SAAjC;;AACA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAV,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACS,IAAD,GAAQC;AAFG,KAAD,CAAZ;AAID,GAPD;;AASA,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACK,cAAF;AAEAjB,IAAAA,WAAW,CACRkB,KADH,CACSd,SADT,EAEGe,IAFH,CAEQ,QAAc;AAAA,UAAb;AAAEC,QAAAA;AAAF,OAAa;AAClB;AACAZ,MAAAA,UAAU,CAACY,IAAI,CAACC,SAAN,CAAV;AACAZ,MAAAA,gBAAgB,GAHE,CAIlB;AACA;;AACAC,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KATH,EAUGY,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEP,YAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,gBAAvC;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,yBADL;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,IAAI,EAAC,YAHP;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,QAAQ,EAAEL,iBALZ;AAME,UAAA,KAAK,EAAEL;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC,mBAAvC;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,yBADL;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,QAAQ,EAAEK,iBALZ;AAME,UAAA,KAAK,EAAEJ;AANT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF,eAyBE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD,CAtED;;GAAMJ,S;UASaD,W;;;KATbC,S;AAwEN,eAAeA,SAAf","sourcesContent":["import { useState, useContext } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../login/login.css\";\nimport TextField from \"@mui/material/TextField\";\nimport authService from \"../../services/auth.services\";\nimport { AuthContext } from \"./../../context/auth.context\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const [loginForm, setLoginForm] = useState({\n    restaurant: \"\",\n    password: \"\",\n  });\n\n  //  const { setShowMessage, setMessageInfo } = useContext(MessageContext)\n  const { storeToken, authenticateUser } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  const { restaurant, password } = loginForm;\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setLoginForm({\n      ...loginForm,\n      [name]: value,\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    authService\n      .login(loginForm)\n      .then(({ data }) => {\n        //console.log(\"JWT token\", data.authToken)\n        storeToken(data.authToken);\n        authenticateUser();\n        // setShowMessage(true)\n        // setMessageInfo({ title: 'Éxito', desc: 'Sesión iniciada correctamente' })\n        navigate(\"/\");\n      })\n      .catch((err) => console.log(err));\n  }\n\n  return (\n    <div id=\"login-form\">\n      <Form onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <TextField\n            id=\"outlined-required-input\"\n            label=\"Restaurant\"\n            name=\"restaurant\"\n            type=\"text\"\n            onChange={handleInputChange}\n            value={restaurant}\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <TextField\n            id=\"outlined-password-input\"\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            onChange={handleInputChange}\n            value={password}\n          />\n        </Form.Group>\n        {/* <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group> */}\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}