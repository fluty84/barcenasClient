{"ast":null,"code":"import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.login = user => {\n      return this.api.post('/auth/loginRestaurant', user);\n    };\n\n    this.api = axios.create({\n      baseURL: 'http://localhost:5005/api'\n    });\n    this.api.interceptors.request.use(config => {\n      const storedToken = localStorage.getItem(\"authToken\");\n\n      if (storedToken) {\n        config.headers = {\n          Authorization: `Bearer ${storedToken}`\n        };\n      }\n\n      return config;\n    });\n  }\n\n  verify(token) {\n    return this.api.get('/auth/verify', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"sources":["/Users/gordi/Desktop/Ironhack/proyectobarcenas/client/src/services/auth.services.js"],"names":["axios","AuthService","constructor","login","user","api","post","create","baseURL","interceptors","request","use","config","storedToken","localStorage","getItem","headers","Authorization","verify","token","get","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AAEdC,EAAAA,WAAW,GAAG;AAAA,SAuBdC,KAvBc,GAuBNC,IAAI,IAAI;AACZ,aAAO,KAAKC,GAAL,CAASC,IAAT,CAAc,uBAAd,EAAuCF,IAAvC,CAAP;AACH,KAzBa;;AACV,SAAKC,GAAL,GAAWL,KAAK,CAACO,MAAN,CAAa;AACpBC,MAAAA,OAAO,EAAE;AADW,KAAb,CAAX;AAII,SAAKH,GAAL,CAASI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAE9C,YAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAApB;;AAEA,UAAIF,WAAJ,EAAiB;AAEbD,QAAAA,MAAM,CAACI,OAAP,GAAiB;AAAEC,UAAAA,aAAa,EAAG,UAASJ,WAAY;AAAvC,SAAjB;AACH;;AAED,aAAOD,MAAP;AAEC,KAXD;AAYP;;AAEFM,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACT,WAAO,KAAKd,GAAL,CAASe,GAAT,CAAa,cAAb,EAA6B;AAAEJ,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAG,UAASE,KAAM;AAAjC;AAAX,KAA7B,CAAP;AACH;;AAvBa;;AAiClB,MAAME,WAAW,GAAG,IAAIpB,WAAJ,EAApB;AAEA,eAAeoB,WAAf","sourcesContent":["import axios from \"axios\"\n\nclass AuthService {\n\n    constructor() {\n        this.api = axios.create({\n            baseURL: 'http://localhost:5005/api'\n        })\n\n            this.api.interceptors.request.use((config) => {\n\n            const storedToken = localStorage.getItem(\"authToken\");\n\n            if (storedToken) {\n\n                config.headers = { Authorization: `Bearer ${storedToken}` }\n            }\n\n            return config\n            \n            })\n    }\n\n   verify(token) {\n        return this.api.get('/auth/verify', { headers: { Authorization: `Bearer ${token}` } })\n    }\n    \n    login = user => {\n        return this.api.post('/auth/loginRestaurant', user)\n    }\n\n\n    \n}\n\nconst authService = new AuthService()\n\nexport default authService"]},"metadata":{},"sourceType":"module"}